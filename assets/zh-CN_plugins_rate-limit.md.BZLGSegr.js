import{_ as a,l as i,a4 as o,a as t}from"./chunks/framework.B6YFTi4e.js";const p=JSON.parse('{"title":"koishi-plugin-rate-limit","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/plugins/rate-limit.md","filePath":"zh-CN/plugins/rate-limit.md"}'),r={name:"zh-CN/plugins/rate-limit.md"};function l(c,e,s,d,n,u){return t(),i("div",null,e[0]||(e[0]=[o('<h1 id="koishi-plugin-rate-limit" tabindex="-1">koishi-plugin-rate-limit <a class="header-anchor" href="#koishi-plugin-rate-limit" aria-label="Permalink to &quot;koishi-plugin-rate-limit&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>要使用本插件，你需要安装数据库支持，并配合 <a href="https://koishi.chat/manual/usage/command.html#%E6%8C%87%E4%BB%A4%E7%AE%A1%E7%90%86" target="_blank" rel="noreferrer">@koishijs/plugin-commands</a> 使用。</p></div><p>koishi-plugin-rate-limit 可用于限制指令调用频率。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>安装此插件后，控制台的「指令管理」页面将会增加一些配置项。</p><p>有些指令 (例如签到抽卡，限制次数的 API 调用等) 我们并不希望被无限调用，这时我们可以通过 <code>maxUsage</code> 设置每天访问额度的上限。当超出总次数后，机器人将回复「调用次数已达上限」。</p><p>另一些指令 (例如高强度刷屏，需要等待一定时间才有结果的功能) 我们并不希望被短时间内重复调用，这时我们可以通过 <code>minInterval</code> 设置最短触发间隔。如果一个处于冷却中的指令再次被调用，机器人将会提示「调用过于频繁，请稍后再试」。</p><p>如果你希望某些选项不计入总次数，可以使用选项配置中的 <code>notUsage</code>。启用此项后，当指令调用含有对应的选项时，将不会收到 <code>maxUsage</code> 和 <code>minInterval</code> 的限制。</p><p>最后，如果我们希望让多个指令共同同一套速率限制，可以通过 <code>usageName</code> 来进行管理。只需将这些指令的 <code>usageName</code> 设置为相同的值即可。</p><h2 id="扩展用户字段" tabindex="-1">扩展用户字段 <a class="header-anchor" href="#扩展用户字段" aria-label="Permalink to &quot;扩展用户字段&quot;">​</a></h2><ul><li><strong>usage:</strong> <code>Record&lt;string, number&gt;</code> 指令调用次数</li><li><strong>timers:</strong> <code>Record&lt;string, number&gt;</code> 指令调用时间</li></ul><h2 id="指令-user-usage-user-timer" tabindex="-1">指令：user.usage / user.timer <a class="header-anchor" href="#指令-user-usage-user-timer" aria-label="Permalink to &quot;指令：user.usage / user.timer&quot;">​</a></h2><ul><li>基本语法：<code>user.xxx [key] [value]</code></li><li>选项： <ul><li><code>-s, --set</code> 设置访问记录（需要 4 级权限）</li><li><code>-c, --clear</code> 清除访问记录（需要 4 级权限）</li><li><code>-t, --target [@user]</code> 目标用户（需要 3 级权限）</li></ul></li></ul><p>如果不提供 <code>-s</code> 和 <code>-c</code> 选项，则会显示当前的访问记录。如果使用了 <code>-s</code>，就会设置名为 <code>key</code> 的访问记录为 <code>value</code>。如果使用了 <code>-c</code> 且提供了 <code>key</code>，就会清除名为 <code>key</code> 的访问记录；否则会清除所有的访问记录。</p>',14)]))}const h=a(r,[["render",l]]);export{p as __pageData,h as default};
