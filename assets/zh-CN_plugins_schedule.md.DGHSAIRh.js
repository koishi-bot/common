import{_ as n,l as c,a4 as t,m as l,w as i,R as d,a as r,Y as o,f as u}from"./chunks/framework.B6YFTi4e.js";const q=JSON.parse('{"title":"koishi-plugin-schedule","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/plugins/schedule.md","filePath":"zh-CN/plugins/schedule.md"}'),h={name:"zh-CN/plugins/schedule.md"};function m(p,e,f,k,g,b){const a=d("chat-message"),s=d("chat-panel");return r(),c("div",null,[e[6]||(e[6]=t('<h1 id="koishi-plugin-schedule" tabindex="-1">koishi-plugin-schedule <a class="header-anchor" href="#koishi-plugin-schedule" aria-label="Permalink to &quot;koishi-plugin-schedule&quot;">​</a></h1><p>koishi-plugin-schedule 用于在用户侧设置计划任务。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果想要在开发者侧设置计划任务，可以使用 <a href="https://cron.koishi.chat" target="_blank" rel="noreferrer">koishi-plugin-cron</a>。</p></div>',3)),l(s,null,{default:i(()=>[l(a,{nickname:"Alice"},{default:i(()=>e[0]||(e[0]=[o("schedule 1m -- echo 233")])),_:1}),l(a,{nickname:"Koishi"},{default:i(()=>e[1]||(e[1]=[o("日程已创建，编号为 1。")])),_:1}),l(a,{nickname:"Alice"},{default:i(()=>e[2]||(e[2]=[o("schedule -l")])),_:1}),l(a,{nickname:"Koishi"},{default:i(()=>e[3]||(e[3]=[o("1. 今天 10:01：echo 233")])),_:1}),e[5]||(e[5]=u("p",null,"——— 1 分钟后 ———",-1)),l(a,{nickname:"Koishi"},{default:i(()=>e[4]||(e[4]=[o("233")])),_:1})]),_:1}),e[7]||(e[7]=t('<h2 id="指令-schedule" tabindex="-1">指令：schedule <a class="header-anchor" href="#指令-schedule" aria-label="Permalink to &quot;指令：schedule&quot;">​</a></h2><p>添加或查找计划任务。</p><ul><li>基本语法：<code>schedule [time] -- [command]</code></li><li>选项列表： <ul><li><code>/ &lt;interval&gt;</code> 设置触发的间隔秒数</li><li><code>-l, --list</code> 查看已经设置的日程</li><li><code>-e, --ensure</code> 错过时间也确保执行</li><li><code>-f, --full</code> 查找全部上下文</li><li><code>-d, --delete &lt;id&gt;</code> 删除已经设置的日程</li></ul></li></ul><h3 id="定时器语法" tabindex="-1">定时器语法 <a class="header-anchor" href="#定时器语法" aria-label="Permalink to &quot;定时器语法&quot;">​</a></h3><ul><li><code>1m</code>: 1 分钟后触发</li><li><code>2h30m</code>: 2 小时 30 分钟后触发</li><li><code>10:00</code>: 今天 10 点触发</li><li><code>1m / 10s</code>: 1 分钟后每隔 10 秒触发</li><li><code>10:00 / 1d</code>: 从今天起每天 10 点触发</li></ul><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="mininterval" tabindex="-1">minInterval <a class="header-anchor" href="#mininterval" aria-label="Permalink to &quot;minInterval&quot;">​</a></h3><ul><li>类型: <code>number</code></li><li>默认值: <code>60000</code></li></ul><p>允许的最短时间间隔，单位为毫秒。如果传入的 interval 参数小于这个值，将会提示“时间间隔过短”。</p>',9))])}const x=n(h,[["render",m]]);export{q as __pageData,x as default};
